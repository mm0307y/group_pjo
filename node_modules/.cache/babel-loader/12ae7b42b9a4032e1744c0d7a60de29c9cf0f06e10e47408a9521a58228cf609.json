{"ast":null,"code":"/*!\n * Glide.js v3.7.1\n * (c) 2013-2024 Jędrzej Chałubek (https://github.com/jedrzejchalubek/)\n * Released under the MIT License.\n */\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n  /**\n   * A number of slides moved on single swipe.\n   *\n   * Available types:\n   * `` - Moves slider by one slide per swipe\n   * `|` - Moves slider between views per swipe (number of slides defined in `perView` options)\n   *\n   * @type {String}\n   */\n  perSwipe: '',\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n  /**\n   * Wait for the animation to finish until the next user input can be processed\n   *\n   * @type {boolean}\n   */\n  waitForTransition: true,\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n  /**\n   * Defines how many clones of current viewport will be generated.\n   *\n   * @type {Number}\n   */\n  cloningRatio: 1,\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    type: {\n      slider: 'glide--slider',\n      carousel: 'glide--carousel'\n    },\n    slide: {\n      clone: 'glide__slide--clone',\n      active: 'glide__slide--active'\n    },\n    arrow: {\n      disabled: 'glide__arrow--disabled'\n    },\n    nav: {\n      active: 'glide__bullet--active'\n    }\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \".concat(msg));\n}\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\n\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction isObject(value) {\n  var type = _typeof(value);\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\n\nfunction mount(glide, extensions, events) {\n  var components = {};\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\n\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n    return r[k], r;\n  }, {});\n}\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\n\nfunction mergeOptions(defaults, settings) {\n  var options = Object.assign({}, defaults, settings); // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = Object.assign({}, defaults.classes, settings.classes);\n    var properties = ['direction', 'type', 'slide', 'arrow', 'nav'];\n    properties.forEach(function (property) {\n      if (settings.classes.hasOwnProperty(property)) {\n        options.classes[property] = _objectSpread2(_objectSpread2({}, defaults.classes[property]), settings.classes[property]);\n      }\n    });\n  }\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = Object.assign({}, defaults.breakpoints, settings.breakpoints);\n  }\n  return options;\n}\nvar EventsBus = /*#__PURE__*/function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, EventsBus);\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n  _createClass(EventsBus, [{\n    key: \"on\",\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n        return;\n      } // Create the event's object if not yet created\n\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      } // Add the handler to queue\n\n      var index = this.events[event].push(handler) - 1; // Provide handle back for removal of event\n\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n  }, {\n    key: \"emit\",\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n        return;\n      } // If the event doesn't exist, or there's no handlers in queue, just leave\n\n      if (!this.hop.call(this.events, event)) {\n        return;\n      } // Cycle through events queue, fire!\n\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n  return EventsBus;\n}();\nvar Glide$1 = /*#__PURE__*/function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Glide);\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this._e.emit('mount.before');\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n      this._e.emit('mount.after');\n      return this;\n    }\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n  }, {\n    key: \"mutate\",\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n      return this;\n    }\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n  }, {\n    key: \"update\",\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.settings = mergeOptions(this.settings, settings);\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n      this._e.emit('update');\n      return this;\n    }\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     * `|>` - Move one viewport forward\r\n     * `|<` - Move one viewport backward\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n  }, {\n    key: \"go\",\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n      return this;\n    }\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n  }, {\n    key: \"move\",\n    value: function move(distance) {\n      this._c.Transition.disable();\n      this._c.Move.make(distance);\n      return this;\n    }\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._e.emit('destroy');\n      return this;\n    }\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n  }, {\n    key: \"play\",\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n      this._e.emit('play');\n      return this;\n    }\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this._e.emit('pause');\n      return this;\n    }\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.disabled = true;\n      return this;\n    }\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.disabled = false;\n      return this;\n    }\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n  }, {\n    key: \"on\",\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n      return this;\n    }\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n  }, {\n    key: \"isType\",\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this._o;\n    }\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */,\n\n    set: function set(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this._i;\n    }\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */,\n\n    set: function set(i) {\n      this._i = toInt(i);\n    }\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this.settings.type;\n    }\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._d;\n    }\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */,\n\n    set: function set(status) {\n      this._d = !!status;\n    }\n  }]);\n  return Glide;\n}();\nfunction Run(Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n      if (!Glide.disabled) {\n        !Glide.settings.waitForTransition || Glide.disable();\n        this.move = move;\n        Events.emit('run.before', this.move);\n        this.calculate();\n        Events.emit('run', this.move);\n        Components.Transition.after(function () {\n          if (_this.isStart()) {\n            Events.emit('run.start', _this.move);\n          }\n          if (_this.isEnd()) {\n            Events.emit('run.end', _this.move);\n          }\n          if (_this.isOffset()) {\n            _this._o = false;\n            Events.emit('run.offset', _this.move);\n          }\n          Events.emit('run.after', _this.move);\n          Glide.enable();\n        });\n      }\n    },\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Number|Undefined}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n        length = this.length;\n      var steps = move.steps,\n        direction = move.direction; // By default assume that size of view is equal to one slide\n\n      var viewSize = 1; // While direction is `=` we want jump to\n      // a specified index described in steps.\n\n      if (direction === '=') {\n        // Check if bound is true, \n        // as we want to avoid whitespaces.\n        if (Glide.settings.bound && toInt(steps) > length) {\n          Glide.index = length;\n          return;\n        }\n        Glide.index = steps;\n        return;\n      } // When pattern is equal to `>>` we want\n      // fast forward to the last slide.\n\n      if (direction === '>' && steps === '>') {\n        Glide.index = length;\n        return;\n      } // When pattern is equal to `<<` we want\n      // fast forward to the first slide.\n\n      if (direction === '<' && steps === '<') {\n        Glide.index = 0;\n        return;\n      } // pagination movement\n\n      if (direction === '|') {\n        viewSize = Glide.settings.perView || 1;\n      } // we are moving forward\n\n      if (direction === '>' || direction === '|' && steps === '>') {\n        var index = calculateForwardIndex(viewSize);\n        if (index > length) {\n          this._o = true;\n        }\n        Glide.index = normalizeForwardIndex(index, viewSize);\n        return;\n      } // we are moving backward\n\n      if (direction === '<' || direction === '|' && steps === '<') {\n        var _index = calculateBackwardIndex(viewSize);\n        if (_index < 0) {\n          this._o = true;\n        }\n        Glide.index = normalizeBackwardIndex(_index, viewSize);\n        return;\n      }\n      warn(\"Invalid direction pattern [\".concat(direction).concat(steps, \"] has been used\"));\n    },\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index <= 0;\n    },\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index >= this.length;\n    },\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n      if (!direction) {\n        return this._o;\n      }\n      if (!this._o) {\n        return false;\n      } // did we view to the right?\n\n      if (direction === '|>') {\n        return this.move.direction === '|' && this.move.steps === '>';\n      } // did we view to the left?\n\n      if (direction === '|<') {\n        return this.move.direction === '|' && this.move.steps === '<';\n      }\n      return this.move.direction === direction;\n    },\n    /**\n     * Checks if bound mode is active\n     *\n     * @return {Boolean}\n     */\n    isBound: function isBound() {\n      return Glide.isType('slider') && Glide.settings.focusAt !== 'center' && Glide.settings.bound;\n    }\n  };\n  /**\n   * Returns index value to move forward/to the right\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n  function calculateForwardIndex(viewSize) {\n    var index = Glide.index;\n    if (Glide.isType('carousel')) {\n      return index + viewSize;\n    }\n    return index + (viewSize - index % viewSize);\n  }\n  /**\n   * Normalizes the given forward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {Number}\n   */\n\n  function normalizeForwardIndex(index, viewSize) {\n    var length = Run.length;\n    if (index <= length) {\n      return index;\n    }\n    if (Glide.isType('carousel')) {\n      return index - (length + 1);\n    }\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on the last possible index value given by bound\n      if (Run.isBound() && !Run.isEnd()) {\n        return length;\n      }\n      return 0;\n    }\n    if (Run.isBound()) {\n      return length;\n    }\n    return Math.floor(length / viewSize) * viewSize;\n  }\n  /**\n   * Calculates index value to move backward/to the left\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n  function calculateBackwardIndex(viewSize) {\n    var index = Glide.index;\n    if (Glide.isType('carousel')) {\n      return index - viewSize;\n    } // ensure our back navigation results in the same index as a forward navigation\n    // to experience a homogeneous paging\n\n    var view = Math.ceil(index / viewSize);\n    return (view - 1) * viewSize;\n  }\n  /**\n   * Normalizes the given backward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {*}\n   */\n\n  function normalizeBackwardIndex(index, viewSize) {\n    var length = Run.length;\n    if (index >= 0) {\n      return index;\n    }\n    if (Glide.isType('carousel')) {\n      return index + (length + 1);\n    }\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on first possible index value before we to rewind to the length given by bound\n      if (Run.isBound() && Run.isStart()) {\n        return length;\n      }\n      return Math.floor(length / viewSize) * viewSize;\n    }\n    return 0;\n  }\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      var step = value.substr(1);\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: step ? toInt(step) ? toInt(step) : step : 0\n      };\n    }\n  });\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length; // If the `bound` option is active, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (this.isBound()) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n      return length - 1;\n    }\n  });\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction throttle(func, wait) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var timeout, context, args, result;\n  var previous = 0;\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n  return throttled;\n}\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\nfunction Gaps(Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimensions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * Components.Sizes.length;\n    }\n  });\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n    return matched;\n  }\n  return [];\n}\n/**\n * Coerces a NodeList to an Array.\n *\n * @param  {NodeList} nodeList\n * @return {Array}\n */\n\nfunction toArray(nodeList) {\n  return Array.prototype.slice.call(nodeList);\n}\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\nfunction Html(Glide, Components, Events) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.collectSlides();\n    },\n    /**\n     * Collect slides\n     */\n    collectSlides: function collectSlides() {\n      this.slides = toArray(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.slide.clone);\n      });\n    }\n  };\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n      if (r !== null) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      Html._t = t;\n    }\n  });\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n  /**\n   * Add/remove/reorder dynamic slides\n   */\n\n  Events.on('update', function () {\n    Html.collectSlides();\n  });\n  return Html;\n}\nfunction Peek(Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n      Peek._v = value;\n    }\n  });\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n      return value * 2 / perView;\n    }\n  });\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n  return Peek;\n}\nfunction Move(Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.offset = offset;\n      Events.emit('move', {\n        movement: this.value\n      });\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n      return translate - offset;\n    }\n  });\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n  return Move;\n}\nfunction Sizes(Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimensions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = \"\".concat(this.slideWidth, \"px\");\n      var slides = Components.Html.slides;\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n    /**\n     * Setups dimensions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper() {\n      Components.Html.wrapper.style.width = \"\".concat(this.wrapperSize, \"px\");\n    },\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the slider (visible area).\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.track.offsetWidth;\n    }\n  });\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of a single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimensions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n  return Sizes;\n}\nfunction Build(Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n      this.typeClass();\n      this.activeClass();\n      Events.emit('build.after');\n    },\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.type[Glide.settings.type]);\n    },\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n      if (slide) {\n        slide.classList.add(classes.slide.active);\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.slide.active);\n        });\n      }\n    },\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var _Glide$settings$class = Glide.settings.classes,\n        type = _Glide$settings$class.type,\n        slide = _Glide$settings$class.slide;\n      Components.Html.root.classList.remove(type[Glide.settings.type]);\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(slide.active);\n      });\n    }\n  };\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimensions\n   * - on updating settings via API\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n  return Build;\n}\nfunction Clones(Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {[]}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n        perView = _Glide$settings.perView,\n        classes = _Glide$settings.classes,\n        cloningRatio = _Glide$settings.cloningRatio;\n      if (slides.length > 0) {\n        var peekIncrementer = +!!Glide.settings.peek;\n        var cloneCount = perView + peekIncrementer + Math.round(perView / 2);\n        var append = slides.slice(0, cloneCount).reverse();\n        var prepend = slides.slice(cloneCount * -1);\n        for (var r = 0; r < Math.max(cloningRatio, Math.floor(perView / slides.length)); r++) {\n          for (var i = 0; i < append.length; i++) {\n            var clone = append[i].cloneNode(true);\n            clone.classList.add(classes.slide.clone);\n            items.push(clone);\n          }\n          for (var _i = 0; _i < prepend.length; _i++) {\n            var _clone = prepend[_i].cloneNode(true);\n            _clone.classList.add(classes.slide.clone);\n            items.unshift(_clone);\n          }\n        }\n      }\n      return items;\n    },\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n        wrapper = _Components$Html.wrapper,\n        slides = _Components$Html.slides;\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half * -1).reverse();\n      var width = \"\".concat(Components.Sizes.slideWidth, \"px\");\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimensions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n  return Clones;\n}\nvar EventsBinder = /*#__PURE__*/function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, EventsBinder);\n    this.listeners = listeners;\n  }\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n  _createClass(EventsBinder, [{\n    key: \"on\",\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      if (isString(events)) {\n        events = [events];\n      }\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n  }, {\n    key: \"off\",\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (isString(events)) {\n        events = [events];\n      }\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n  return EventsBinder;\n}();\nfunction Resize(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n  return Resize;\n}\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\nfunction Direction(Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n      return pattern;\n    },\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n\n  Events.on('update', function () {\n    Direction.mount();\n  });\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl(Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap(Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var multiplier = Math.floor(translate / Components.Sizes.slideWidth);\n      return translate + Components.Gaps.value * multiplier;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow(Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction Peeking(Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n        return translate - peek;\n      }\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing(Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction mutator(Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n      return translate;\n    }\n  };\n}\nfunction Translate(Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n      var translate3d = \"translate3d(\".concat(-1 * transform, \"px, 0px, 0px)\");\n      Components.Html.wrapper.style.mozTransform = translate3d; // needed for supported Firefox 10-15\n\n      Components.Html.wrapper.style.webkitTransform = translate3d; // needed for supported Chrome 10-35, Safari 5.1-8, and Opera 15-22\n\n      Components.Html.wrapper.style.transform = translate3d;\n    },\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    },\n    /**\n     * @return {number}\n     */\n    getStartIndex: function getStartIndex() {\n      var length = Components.Sizes.length;\n      var index = Glide.index;\n      var perView = Glide.settings.perView;\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        return length + (index - perView);\n      } // \"modulo length\" converts an index that equals length to zero\n\n      return (index + perView) % length;\n    },\n    /**\n     * @return {number}\n     */\n    getTravelDistance: function getTravelDistance() {\n      var travelDistance = Components.Sizes.slideWidth * Glide.settings.perView;\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        // reverse travel distance so that we don't have to change subtract operations\n        return travelDistance * -1;\n      }\n      return travelDistance;\n    }\n  };\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n\n  Events.on('move', function (context) {\n    if (!Glide.isType('carousel') || !Components.Run.isOffset()) {\n      return Translate.set(context.movement);\n    }\n    Components.Transition.after(function () {\n      Events.emit('translate.jump');\n      Translate.set(Components.Sizes.slideWidth * Glide.index);\n    });\n    var startWidth = Components.Sizes.slideWidth * Components.Translate.getStartIndex();\n    return Translate.set(startWidth - Components.Translate.getTravelDistance());\n  });\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n  return Translate;\n}\nfunction Transition(Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n      if (disabled) {\n        return \"\".concat(property, \" 0ms \").concat(settings.animationTimingFunc);\n      }\n      return \"\".concat(property, \" \").concat(this.duration, \"ms \").concat(settings.animationTimingFunc);\n    },\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n      this.set();\n    },\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n      this.set();\n    }\n  };\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n      return settings.animationDuration;\n    }\n  });\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n\n  Events.on('move', function () {\n    Transition.set();\n  });\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimensions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n\n  Events.on('run', function () {\n    Transition.enable();\n  });\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n  return Transition;\n}\n\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\nvar supportsPassive = false;\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\nvar supportsPassive$1 = supportsPassive;\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\nfunction Swipe(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n        var swipe = this.touches(event);\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n        Events.emit('swipe.start');\n      }\n    },\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n          touchAngle = _Glide$settings.touchAngle,\n          touchRatio = _Glide$settings.touchRatio,\n          classes = _Glide$settings.classes;\n        var swipe = this.touches(event);\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n          Components.Move.make(subExSx * toFloat(touchRatio));\n          Components.Html.root.classList.add(classes.dragging);\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings2 = Glide.settings,\n          perSwipe = _Glide$settings2.perSwipe,\n          touchAngle = _Glide$settings2.touchAngle,\n          classes = _Glide$settings2.classes;\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        this.enable();\n        if (swipeDistance > threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n        } else if (swipeDistance < -threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n        Components.Html.root.classList.remove(classes.dragging);\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n        Events.emit('swipe.end');\n      }\n    },\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n      var _Glide$settings3 = Glide.settings,\n        swipeThreshold = _Glide$settings3.swipeThreshold,\n        dragThreshold = _Glide$settings3.dragThreshold;\n      if (swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n      if (dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n      return event.touches[0] || event.changedTouches[0];\n    },\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n      return settings.swipeThreshold;\n    },\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n      Components.Transition.enable();\n      return this;\n    },\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n      Components.Transition.disable();\n      return this;\n    }\n  };\n  /**\n   * Add component class:\n   * - after initial building\n   */\n\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n  return Swipe;\n}\nfunction Images(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n  return Images;\n}\nfunction Anchors(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var detached = false;\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var prevented = false;\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n      this.bind();\n    },\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n        }\n        detached = true;\n      }\n      return this;\n    },\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n        }\n        detached = false;\n      }\n      return this;\n    }\n  };\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n  return Anchors;\n}\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\nvar PREVIOUS_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\"<\\\"]\");\nvar NEXT_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\">\\\"]\");\nfunction Controls(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n      /**\n       * Collection of arrow control HTML elements.\n       *\n       * @private\n       * @type {Object}\n       */\n\n      this._arrowControls = {\n        previous: Components.Html.root.querySelectorAll(PREVIOUS_CONTROLS_SELECTOR),\n        next: Components.Html.root.querySelectorAll(NEXT_CONTROLS_SELECTOR)\n      };\n      this.addBindings();\n    },\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n      if (!item) {\n        return;\n      }\n      item.classList.add(settings.classes.nav.active);\n      siblings(item).forEach(function (sibling) {\n        sibling.classList.remove(settings.classes.nav.active);\n      });\n    },\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      var item = controls[Glide.index];\n      item === null || item === void 0 ? void 0 : item.classList.remove(Glide.settings.classes.nav.active);\n    },\n    /**\n     * Calculates, removes or adds `Glide.settings.classes.disabledArrow` class on the control arrows\n     */\n    setArrowState: function setArrowState() {\n      if (Glide.settings.rewind) {\n        return;\n      }\n      var next = Controls._arrowControls.next;\n      var previous = Controls._arrowControls.previous;\n      this.resetArrowState(next, previous);\n      if (Glide.index === 0) {\n        this.disableArrow(previous);\n      }\n      if (Glide.index === Components.Run.length) {\n        this.disableArrow(next);\n      }\n    },\n    /**\n     * Removes `Glide.settings.classes.disabledArrow` from given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    resetArrowState: function resetArrowState() {\n      var settings = Glide.settings;\n      for (var _len = arguments.length, lists = new Array(_len), _key = 0; _key < _len; _key++) {\n        lists[_key] = arguments[_key];\n      }\n      lists.forEach(function (list) {\n        toArray(list).forEach(function (element) {\n          element.classList.remove(settings.classes.arrow.disabled);\n        });\n      });\n    },\n    /**\n     * Adds `Glide.settings.classes.disabledArrow` to given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    disableArrow: function disableArrow() {\n      var settings = Glide.settings;\n      for (var _len2 = arguments.length, lists = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        lists[_key2] = arguments[_key2];\n      }\n      lists.forEach(function (list) {\n        toArray(list).forEach(function (element) {\n          element.classList.add(settings.classes.arrow.disabled);\n        });\n      });\n    },\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in direction given via the\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {void}\n     */\n    click: function click(event) {\n      if (!supportsPassive$1 && event.type === 'touchstart') {\n        event.preventDefault();\n      }\n      var direction = event.currentTarget.getAttribute('data-glide-dir');\n      Components.Run.make(Components.Direction.resolve(direction));\n    }\n  };\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n  /**\n   * Add or remove disabled class of arrow elements\n   */\n\n  Events.on(['mount.after', 'run'], function () {\n    Controls.setArrowState();\n  });\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n  return Controls;\n}\nfunction Keyboard(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      var perSwipe = Glide.settings.perSwipe;\n      var arrowSymbols = {\n        ArrowRight: '>',\n        ArrowLeft: '<'\n      };\n      if (['ArrowRight', 'ArrowLeft'].includes(event.code)) {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe).concat(arrowSymbols[event.code])));\n      }\n    }\n  };\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Keyboard;\n}\nfunction Autoplay(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.enable();\n      this.start();\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n    /**\n     * Enables autoplaying\n     *\n     * @returns {Void}\n     */\n    enable: function enable() {\n      this._e = true;\n    },\n    /**\n     * Disables autoplaying.\n     *\n     * @returns {Void}\n     */\n    disable: function disable() {\n      this._e = false;\n    },\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n      if (!this._e) {\n        return;\n      }\n      this.enable();\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n            Components.Run.make('>');\n            _this.start();\n            Events.emit('autoplay');\n          }, this.time);\n        }\n      }\n    },\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n      Binder.on('mouseover', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.stop();\n        }\n      });\n      Binder.on('mouseout', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.start();\n        }\n      });\n    },\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['run.before', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n  Events.on(['pause', 'destroy'], function () {\n    Autoplay.disable();\n    Autoplay.stop();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['run.after', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['play'], function () {\n    Autoplay.enable();\n    Autoplay.start();\n  });\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\n\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn(\"Breakpoints option must be an object\");\n  }\n  return {};\n}\nfunction Breakpoints(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n\n  var settings = Glide.settings;\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n\n  var points = sortBreakpoints(settings.breakpoints);\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n\n  var defaults = Object.assign({}, settings);\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia(\"(max-width: \".concat(point, \"px)\")).matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n      return defaults;\n    }\n  };\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n\n  Object.assign(settings, Breakpoints.match(points));\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n    defaults = Object.assign({}, settings);\n  });\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n  return Breakpoints;\n}\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\nvar Glide = /*#__PURE__*/function (_Core) {\n  _inherits(Glide, _Core);\n  var _super = _createSuper(Glide);\n  function Glide() {\n    _classCallCheck(this, Glide);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _get(_getPrototypeOf(Glide.prototype), \"mount\", this).call(this, Object.assign({}, COMPONENTS, extensions));\n    }\n  }]);\n  return Glide;\n}(Glide$1);\nexport { Glide as default };","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","value","_inherits","subClass","superClass","create","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","call","e","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","_superPropBase","property","hasOwnProperty","_get","get","receiver","base","desc","defaults","type","startAt","perView","focusAt","gap","autoplay","hoverpause","keyboard","bound","swipeThreshold","dragThreshold","perSwipe","touchRatio","touchAngle","animationDuration","rewind","rewindDuration","animationTimingFunc","waitForTransition","throttle","direction","peek","cloningRatio","breakpoints","classes","swipeable","dragging","ltr","rtl","slider","carousel","slide","clone","active","arrow","disabled","nav","warn","msg","console","error","concat","toInt","parseInt","toFloat","parseFloat","isString","isObject","isFunction","isUndefined","isArray","Array","mount","glide","extensions","events","components","name","_name","define","prop","definition","sortKeys","sort","reduce","r","k","mergeOptions","settings","options","assign","properties","EventsBus","undefined","hop","on","event","handler","index","remove","emit","context","item","Glide$1","Glide","selector","_c","_t","_e","mount$1","mutate","transformers","update","go","pattern","Run","make","move","distance","Transition","disable","Move","destroy","play","interval","pause","enable","isType","_o","set","_i","_d","status","Components","Events","_this","calculate","after","isStart","isEnd","isOffset","steps","viewSize","calculateForwardIndex","normalizeForwardIndex","_index","calculateBackwardIndex","normalizeBackwardIndex","isBound","Math","floor","view","ceil","_m","step","substr","Html","slides","now","Date","getTime","func","wait","timeout","args","previous","later","leading","throttled","at","remaining","clearTimeout","trailing","setTimeout","cancel","MARGIN_TYPE","Gaps","len","style","Direction","marginLeft","marginRight","Sizes","wrapper","children","siblings","node","parentNode","n","firstChild","matched","nextSibling","nodeType","toArray","nodeList","slice","TRACK_SELECTOR","root","track","querySelector","collectSlides","classList","contains","_r","document","t","Peek","_v","before","offset","movement","slideWidth","translate","is","setupSlides","width","setupWrapper","wrapperSize","offsetWidth","grow","Clones","reductor","Build","typeClass","activeClass","add","sibling","removeClasses","_Glide$settings$class","items","collect","_Glide$settings","peekIncrementer","cloneCount","round","append","reverse","prepend","max","cloneNode","_clone","unshift","_Components$Html","half","appendChild","_i2","insertBefore","_i3","removeChild","EventsBinder","listeners","el","closure","capture","addEventListener","off","removeEventListener","Resize","Binder","bind","window","unbind","VALID_DIRECTIONS","FLIPED_MOVEMENTS","resolve","token","split","join","addClass","removeClass","indexOf","Rtl","modify","Gap","multiplier","Grow","Peeking","Focusing","mutator","TRANSFORMERS","transformer","Translate","transform","translate3d","mozTransform","webkitTransform","getStartIndex","getTravelDistance","travelDistance","startWidth","compose","duration","transition","callback","supportsPassive","opts","supportsPassive$1","START_EVENTS","MOVE_EVENTS","END_EVENTS","MOUSE_EVENTS","Swipe","swipeSin","swipeStartX","swipeStartY","passive","bindSwipeStart","start","swipe","touches","pageX","pageY","bindSwipeMove","bindSwipeEnd","subExSx","subEySy","powEX","abs","powEY","swipeHypotenuse","sqrt","swipeCathetus","asin","PI","stopPropagation","end","_Glide$settings2","threshold","swipeDistance","swipeDeg","unbindSwipeMove","unbindSwipeEnd","_Glide$settings3","unbindSwipeStart","_this2","_this3","changedTouches","Images","dragstart","preventDefault","Anchors","detached","prevented","_a","querySelectorAll","click","detach","draggable","attach","NAV_SELECTOR","CONTROLS_SELECTOR","PREVIOUS_CONTROLS_SELECTOR","NEXT_CONTROLS_SELECTOR","Controls","_n","_arrowControls","next","addBindings","setActive","removeActive","controls","setArrowState","resetArrowState","disableArrow","_len","lists","_key","list","element","_len2","_key2","removeBindings","elements","currentTarget","getAttribute","Keyboard","press","arrowSymbols","ArrowRight","ArrowLeft","includes","code","Autoplay","setInterval","stop","time","clearInterval","sortBreakpoints","points","Breakpoints","match","matchMedia","point","matches","COMPONENTS","_Core","_super","default"],"sources":["C:/test/test/test-project/node_modules/@glidejs/glide/dist/glide.esm.js"],"sourcesContent":["/*!\n * Glide.js v3.7.1\n * (c) 2013-2024 Jędrzej Chałubek (https://github.com/jedrzejchalubek/)\n * Released under the MIT License.\n */\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A number of slides moved on single swipe.\n   *\n   * Available types:\n   * `` - Moves slider by one slide per swipe\n   * `|` - Moves slider between views per swipe (number of slides defined in `perView` options)\n   *\n   * @type {String}\n   */\n  perSwipe: '',\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Wait for the animation to finish until the next user input can be processed\n   *\n   * @type {boolean}\n   */\n  waitForTransition: true,\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Defines how many clones of current viewport will be generated.\n   *\n   * @type {Number}\n   */\n  cloningRatio: 1,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    type: {\n      slider: 'glide--slider',\n      carousel: 'glide--carousel'\n    },\n    slide: {\n      clone: 'glide__slide--clone',\n      active: 'glide__slide--active'\n    },\n    arrow: {\n      disabled: 'glide__arrow--disabled'\n    },\n    nav: {\n      active: 'glide__bullet--active'\n    }\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \".concat(msg));\n}\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\n\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction isObject(value) {\n  var type = _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\n\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\n\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n    return r[k], r;\n  }, {});\n}\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\n\nfunction mergeOptions(defaults, settings) {\n  var options = Object.assign({}, defaults, settings); // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = Object.assign({}, defaults.classes, settings.classes);\n    var properties = ['direction', 'type', 'slide', 'arrow', 'nav'];\n    properties.forEach(function (property) {\n      if (settings.classes.hasOwnProperty(property)) {\n        options.classes[property] = _objectSpread2(_objectSpread2({}, defaults.classes[property]), settings.classes[property]);\n      }\n    });\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = Object.assign({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = /*#__PURE__*/function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  _createClass(EventsBus, [{\n    key: \"on\",\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n\n        return;\n      } // Create the event's object if not yet created\n\n\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      } // Add the handler to queue\n\n\n      var index = this.events[event].push(handler) - 1; // Provide handle back for removal of event\n\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n\n        return;\n      } // If the event doesn't exist, or there's no handlers in queue, just leave\n\n\n      if (!this.hop.call(this.events, event)) {\n        return;\n      } // Cycle through events queue, fire!\n\n\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n\n  return EventsBus;\n}();\n\nvar Glide$1 = /*#__PURE__*/function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: \"mutate\",\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     * `|>` - Move one viewport forward\r\n     * `|<` - Move one viewport backward\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"go\",\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(distance) {\n      this._c.Transition.disable();\n\n      this._c.Move.make(distance);\n\n      return this;\n    }\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.disabled = true;\n      return this;\n    }\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.disabled = false;\n      return this;\n    }\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"isType\",\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this._o;\n    }\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this._i;\n    }\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set(i) {\n      this._i = toInt(i);\n    }\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this.settings.type;\n    }\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._d;\n    }\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set(status) {\n      this._d = !!status;\n    }\n  }]);\n\n  return Glide;\n}();\n\nfunction Run (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        !Glide.settings.waitForTransition || Glide.disable();\n        this.move = move;\n        Events.emit('run.before', this.move);\n        this.calculate();\n        Events.emit('run', this.move);\n        Components.Transition.after(function () {\n          if (_this.isStart()) {\n            Events.emit('run.start', _this.move);\n          }\n\n          if (_this.isEnd()) {\n            Events.emit('run.end', _this.move);\n          }\n\n          if (_this.isOffset()) {\n            _this._o = false;\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n          Glide.enable();\n        });\n      }\n    },\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Number|Undefined}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction; // By default assume that size of view is equal to one slide\n\n      var viewSize = 1; // While direction is `=` we want jump to\n      // a specified index described in steps.\n\n      if (direction === '=') {\n        // Check if bound is true, \n        // as we want to avoid whitespaces.\n        if (Glide.settings.bound && toInt(steps) > length) {\n          Glide.index = length;\n          return;\n        }\n\n        Glide.index = steps;\n        return;\n      } // When pattern is equal to `>>` we want\n      // fast forward to the last slide.\n\n\n      if (direction === '>' && steps === '>') {\n        Glide.index = length;\n        return;\n      } // When pattern is equal to `<<` we want\n      // fast forward to the first slide.\n\n\n      if (direction === '<' && steps === '<') {\n        Glide.index = 0;\n        return;\n      } // pagination movement\n\n\n      if (direction === '|') {\n        viewSize = Glide.settings.perView || 1;\n      } // we are moving forward\n\n\n      if (direction === '>' || direction === '|' && steps === '>') {\n        var index = calculateForwardIndex(viewSize);\n\n        if (index > length) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeForwardIndex(index, viewSize);\n        return;\n      } // we are moving backward\n\n\n      if (direction === '<' || direction === '|' && steps === '<') {\n        var _index = calculateBackwardIndex(viewSize);\n\n        if (_index < 0) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeBackwardIndex(_index, viewSize);\n        return;\n      }\n\n      warn(\"Invalid direction pattern [\".concat(direction).concat(steps, \"] has been used\"));\n    },\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index <= 0;\n    },\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index >= this.length;\n    },\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n      if (!direction) {\n        return this._o;\n      }\n\n      if (!this._o) {\n        return false;\n      } // did we view to the right?\n\n\n      if (direction === '|>') {\n        return this.move.direction === '|' && this.move.steps === '>';\n      } // did we view to the left?\n\n\n      if (direction === '|<') {\n        return this.move.direction === '|' && this.move.steps === '<';\n      }\n\n      return this.move.direction === direction;\n    },\n\n    /**\n     * Checks if bound mode is active\n     *\n     * @return {Boolean}\n     */\n    isBound: function isBound() {\n      return Glide.isType('slider') && Glide.settings.focusAt !== 'center' && Glide.settings.bound;\n    }\n  };\n  /**\n   * Returns index value to move forward/to the right\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n  function calculateForwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index + viewSize;\n    }\n\n    return index + (viewSize - index % viewSize);\n  }\n  /**\n   * Normalizes the given forward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function normalizeForwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index <= length) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index - (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on the last possible index value given by bound\n      if (Run.isBound() && !Run.isEnd()) {\n        return length;\n      }\n\n      return 0;\n    }\n\n    if (Run.isBound()) {\n      return length;\n    }\n\n    return Math.floor(length / viewSize) * viewSize;\n  }\n  /**\n   * Calculates index value to move backward/to the left\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function calculateBackwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index - viewSize;\n    } // ensure our back navigation results in the same index as a forward navigation\n    // to experience a homogeneous paging\n\n\n    var view = Math.ceil(index / viewSize);\n    return (view - 1) * viewSize;\n  }\n  /**\n   * Normalizes the given backward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {*}\n   */\n\n\n  function normalizeBackwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index >= 0) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index + (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on first possible index value before we to rewind to the length given by bound\n      if (Run.isBound() && Run.isStart()) {\n        return length;\n      }\n\n      return Math.floor(length / viewSize) * viewSize;\n    }\n\n    return 0;\n  }\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      var step = value.substr(1);\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: step ? toInt(step) ? toInt(step) : step : 0\n      };\n    }\n  });\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length; // If the `bound` option is active, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (this.isBound()) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction throttle(func, wait) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var timeout, context, args, result;\n  var previous = 0;\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\nfunction Gaps (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimensions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * Components.Sizes.length;\n    }\n  });\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n/**\n * Coerces a NodeList to an Array.\n *\n * @param  {NodeList} nodeList\n * @return {Array}\n */\n\nfunction toArray(nodeList) {\n  return Array.prototype.slice.call(nodeList);\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\nfunction Html (Glide, Components, Events) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.collectSlides();\n    },\n\n    /**\n     * Collect slides\n     */\n    collectSlides: function collectSlides() {\n      this.slides = toArray(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.slide.clone);\n      });\n    }\n  };\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (r !== null) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      Html._t = t;\n    }\n  });\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n  /**\n   * Add/remove/reorder dynamic slides\n   */\n\n  Events.on('update', function () {\n    Html.collectSlides();\n  });\n  return Html;\n}\n\nfunction Peek (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n  return Peek;\n}\n\nfunction Move (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.offset = offset;\n      Events.emit('move', {\n        movement: this.value\n      });\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n  return Move;\n}\n\nfunction Sizes (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimensions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = \"\".concat(this.slideWidth, \"px\");\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n    /**\n     * Setups dimensions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper() {\n      Components.Html.wrapper.style.width = \"\".concat(this.wrapperSize, \"px\");\n    },\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the slider (visible area).\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.track.offsetWidth;\n    }\n  });\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of a single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimensions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n  return Sizes;\n}\n\nfunction Build (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n      this.typeClass();\n      this.activeClass();\n      Events.emit('build.after');\n    },\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.type[Glide.settings.type]);\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.slide.active);\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.slide.active);\n        });\n      }\n    },\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var _Glide$settings$class = Glide.settings.classes,\n          type = _Glide$settings$class.type,\n          slide = _Glide$settings$class.slide;\n      Components.Html.root.classList.remove(type[Glide.settings.type]);\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(slide.active);\n      });\n    }\n  };\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimensions\n   * - on updating settings via API\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n  return Build;\n}\n\nfunction Clones (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {[]}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes,\n          cloningRatio = _Glide$settings.cloningRatio;\n\n      if (slides.length > 0) {\n        var peekIncrementer = +!!Glide.settings.peek;\n        var cloneCount = perView + peekIncrementer + Math.round(perView / 2);\n        var append = slides.slice(0, cloneCount).reverse();\n        var prepend = slides.slice(cloneCount * -1);\n\n        for (var r = 0; r < Math.max(cloningRatio, Math.floor(perView / slides.length)); r++) {\n          for (var i = 0; i < append.length; i++) {\n            var clone = append[i].cloneNode(true);\n            clone.classList.add(classes.slide.clone);\n            items.push(clone);\n          }\n\n          for (var _i = 0; _i < prepend.length; _i++) {\n            var _clone = prepend[_i].cloneNode(true);\n\n            _clone.classList.add(classes.slide.clone);\n\n            items.unshift(_clone);\n          }\n        }\n      }\n\n      return items;\n    },\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half * -1).reverse();\n      var width = \"\".concat(Components.Sizes.slideWidth, \"px\");\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimensions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n  return Clones;\n}\n\nvar EventsBinder = /*#__PURE__*/function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  _createClass(EventsBinder, [{\n    key: \"on\",\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n\n  return EventsBinder;\n}();\n\nfunction Resize (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\nfunction Direction (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n\n  Events.on('update', function () {\n    Direction.mount();\n  });\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var multiplier = Math.floor(translate / Components.Sizes.slideWidth);\n      return translate + Components.Gaps.value * multiplier;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction Peeking (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction mutator (Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n      var translate3d = \"translate3d(\".concat(-1 * transform, \"px, 0px, 0px)\");\n      Components.Html.wrapper.style.mozTransform = translate3d; // needed for supported Firefox 10-15\n\n      Components.Html.wrapper.style.webkitTransform = translate3d; // needed for supported Chrome 10-35, Safari 5.1-8, and Opera 15-22\n\n      Components.Html.wrapper.style.transform = translate3d;\n    },\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    },\n\n    /**\n     * @return {number}\n     */\n    getStartIndex: function getStartIndex() {\n      var length = Components.Sizes.length;\n      var index = Glide.index;\n      var perView = Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        return length + (index - perView);\n      } // \"modulo length\" converts an index that equals length to zero\n\n\n      return (index + perView) % length;\n    },\n\n    /**\n     * @return {number}\n     */\n    getTravelDistance: function getTravelDistance() {\n      var travelDistance = Components.Sizes.slideWidth * Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        // reverse travel distance so that we don't have to change subtract operations\n        return travelDistance * -1;\n      }\n\n      return travelDistance;\n    }\n  };\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n\n  Events.on('move', function (context) {\n    if (!Glide.isType('carousel') || !Components.Run.isOffset()) {\n      return Translate.set(context.movement);\n    }\n\n    Components.Transition.after(function () {\n      Events.emit('translate.jump');\n      Translate.set(Components.Sizes.slideWidth * Glide.index);\n    });\n    var startWidth = Components.Sizes.slideWidth * Components.Translate.getStartIndex();\n    return Translate.set(startWidth - Components.Translate.getTravelDistance());\n  });\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n  return Translate;\n}\n\nfunction Transition (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (disabled) {\n        return \"\".concat(property, \" 0ms \").concat(settings.animationTimingFunc);\n      }\n\n      return \"\".concat(property, \" \").concat(this.duration, \"ms \").concat(settings.animationTimingFunc);\n    },\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n      this.set();\n    },\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n      this.set();\n    }\n  };\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n\n  Events.on('move', function () {\n    Transition.set();\n  });\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimensions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n\n  Events.on('run', function () {\n    Transition.enable();\n  });\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n  return Transition;\n}\n\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\nfunction Swipe (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n        var swipe = this.touches(event);\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n        Events.emit('swipe.start');\n      }\n    },\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n        var swipe = this.touches(event);\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n          Components.Move.make(subExSx * toFloat(touchRatio));\n          Components.Html.root.classList.add(classes.dragging);\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings2 = Glide.settings,\n            perSwipe = _Glide$settings2.perSwipe,\n            touchAngle = _Glide$settings2.touchAngle,\n            classes = _Glide$settings2.classes;\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n        } else if (swipeDistance < -threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(classes.dragging);\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n        Events.emit('swipe.end');\n      }\n    },\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var _Glide$settings3 = Glide.settings,\n          swipeThreshold = _Glide$settings3.swipeThreshold,\n          dragThreshold = _Glide$settings3.dragThreshold;\n\n      if (swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n      Components.Transition.enable();\n      return this;\n    },\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n      Components.Transition.disable();\n      return this;\n    }\n  };\n  /**\n   * Add component class:\n   * - after initial building\n   */\n\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n  return Swipe;\n}\n\nfunction Images (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n  return Images;\n}\n\nfunction Anchors (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var detached = false;\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var prevented = false;\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n      this.bind();\n    },\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\nvar PREVIOUS_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\"<\\\"]\");\nvar NEXT_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\">\\\"]\");\nfunction Controls (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n      /**\n       * Collection of arrow control HTML elements.\n       *\n       * @private\n       * @type {Object}\n       */\n\n      this._arrowControls = {\n        previous: Components.Html.root.querySelectorAll(PREVIOUS_CONTROLS_SELECTOR),\n        next: Components.Html.root.querySelectorAll(NEXT_CONTROLS_SELECTOR)\n      };\n      this.addBindings();\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      if (!item) {\n        return;\n      }\n\n      item.classList.add(settings.classes.nav.active);\n      siblings(item).forEach(function (sibling) {\n        sibling.classList.remove(settings.classes.nav.active);\n      });\n    },\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      var item = controls[Glide.index];\n      item === null || item === void 0 ? void 0 : item.classList.remove(Glide.settings.classes.nav.active);\n    },\n\n    /**\n     * Calculates, removes or adds `Glide.settings.classes.disabledArrow` class on the control arrows\n     */\n    setArrowState: function setArrowState() {\n      if (Glide.settings.rewind) {\n        return;\n      }\n\n      var next = Controls._arrowControls.next;\n      var previous = Controls._arrowControls.previous;\n      this.resetArrowState(next, previous);\n\n      if (Glide.index === 0) {\n        this.disableArrow(previous);\n      }\n\n      if (Glide.index === Components.Run.length) {\n        this.disableArrow(next);\n      }\n    },\n\n    /**\n     * Removes `Glide.settings.classes.disabledArrow` from given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    resetArrowState: function resetArrowState() {\n      var settings = Glide.settings;\n\n      for (var _len = arguments.length, lists = new Array(_len), _key = 0; _key < _len; _key++) {\n        lists[_key] = arguments[_key];\n      }\n\n      lists.forEach(function (list) {\n        toArray(list).forEach(function (element) {\n          element.classList.remove(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds `Glide.settings.classes.disabledArrow` to given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    disableArrow: function disableArrow() {\n      var settings = Glide.settings;\n\n      for (var _len2 = arguments.length, lists = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        lists[_key2] = arguments[_key2];\n      }\n\n      lists.forEach(function (list) {\n        toArray(list).forEach(function (element) {\n          element.classList.add(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in direction given via the\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {void}\n     */\n    click: function click(event) {\n      if (!supportsPassive$1 && event.type === 'touchstart') {\n        event.preventDefault();\n      }\n\n      var direction = event.currentTarget.getAttribute('data-glide-dir');\n      Components.Run.make(Components.Direction.resolve(direction));\n    }\n  };\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n  /**\n   * Add or remove disabled class of arrow elements\n   */\n\n  Events.on(['mount.after', 'run'], function () {\n    Controls.setArrowState();\n  });\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n  return Controls;\n}\n\nfunction Keyboard (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      var perSwipe = Glide.settings.perSwipe;\n      var arrowSymbols = {\n        ArrowRight: '>',\n        ArrowLeft: '<'\n      };\n\n      if (['ArrowRight', 'ArrowLeft'].includes(event.code)) {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe).concat(arrowSymbols[event.code])));\n      }\n    }\n  };\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Keyboard;\n}\n\nfunction Autoplay (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.enable();\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Enables autoplaying\n     *\n     * @returns {Void}\n     */\n    enable: function enable() {\n      this._e = true;\n    },\n\n    /**\n     * Disables autoplaying.\n     *\n     * @returns {Void}\n     */\n    disable: function disable() {\n      this._e = false;\n    },\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (!this._e) {\n        return;\n      }\n\n      this.enable();\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n\n            Events.emit('autoplay');\n          }, this.time);\n        }\n      }\n    },\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.stop();\n        }\n      });\n      Binder.on('mouseout', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.start();\n        }\n      });\n    },\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['run.before', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n  Events.on(['pause', 'destroy'], function () {\n    Autoplay.disable();\n    Autoplay.stop();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['run.after', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['play'], function () {\n    Autoplay.enable();\n    Autoplay.start();\n  });\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\n\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn(\"Breakpoints option must be an object\");\n  }\n\n  return {};\n}\n\nfunction Breakpoints (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n\n  var settings = Glide.settings;\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n\n  var points = sortBreakpoints(settings.breakpoints);\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n\n  var defaults = Object.assign({}, settings);\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia(\"(max-width: \".concat(point, \"px)\")).matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n\n  Object.assign(settings, Breakpoints.match(points));\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n    defaults = Object.assign({}, settings);\n  });\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide = /*#__PURE__*/function (_Core) {\n  _inherits(Glide, _Core);\n\n  var _super = _createSuper(Glide);\n\n  function Glide() {\n    _classCallCheck(this, Glide);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _get(_getPrototypeOf(Glide.prototype), \"mount\", this).call(this, Object.assign({}, COMPONENTS, extensions));\n    }\n  }]);\n\n  return Glide;\n}(Glide$1);\n\nexport { Glide as default };\n"],"mappings":"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EACEC,OAAO,EAAE,CAAC;EAEV;AACF;AACA;AACA;AACA;EACEC,GAAG,EAAE,EAAE;EAEP;AACF;AACA;AACA;AACA;EACEC,QAAQ,EAAE,KAAK;EAEf;AACF;AACA;AACA;AACA;EACEC,UAAU,EAAE,IAAI;EAEhB;AACF;AACA;AACA;AACA;EACEC,QAAQ,EAAE,IAAI;EAEd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,KAAK,EAAE,KAAK;EAEZ;AACF;AACA;AACA;AACA;EACEC,cAAc,EAAE,EAAE;EAElB;AACF;AACA;AACA;AACA;EACEC,aAAa,EAAE,GAAG;EAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAE,EAAE;EAEZ;AACF;AACA;AACA;AACA;EACEC,UAAU,EAAE,GAAG;EAEf;AACF;AACA;AACA;AACA;EACEC,UAAU,EAAE,EAAE;EAEd;AACF;AACA;AACA;AACA;EACEC,iBAAiB,EAAE,GAAG;EAEtB;AACF;AACA;AACA;AACA;EACEC,MAAM,EAAE,IAAI;EAEZ;AACF;AACA;AACA;AACA;EACEC,cAAc,EAAE,GAAG;EAEnB;AACF;AACA;AACA;AACA;EACEC,mBAAmB,EAAE,mCAAmC;EAExD;AACF;AACA;AACA;AACA;EACEC,iBAAiB,EAAE,IAAI;EAEvB;AACF;AACA;AACA;AACA;EACEC,QAAQ,EAAE,EAAE;EAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,SAAS,EAAE,KAAK;EAEhB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,IAAI,EAAE,CAAC;EAEP;AACF;AACA;AACA;AACA;EACEC,YAAY,EAAE,CAAC;EAEf;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,WAAW,EAAE,CAAC,CAAC;EAEf;AACF;AACA;AACA;AACA;AACA;EACEC,OAAO,EAAE;IACPC,SAAS,EAAE,kBAAkB;IAC7BC,QAAQ,EAAE,iBAAiB;IAC3BN,SAAS,EAAE;MACTO,GAAG,EAAE,YA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}